name: Build Release

on:
  push:
    branches:
      - release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Print build name
        run: echo "$GITHUB_ACTOR is building '$GITHUB_REPOSITORY' (commit $GITHUB_SHA)"
      
      - name: Build Docker image
        run: docker build . --file Dockerfile --tag website

      - name: Auth for GitHub's Docker repository
        env:
          USER: ${{ secrets.PACKAGES_USER }}
          TOKEN: ${{ secrets.PACKAGES_TOKEN }}
        run: docker login docker.pkg.github.com -u $USER -p $TOKEN

      - name: Tag Docker image
        run: |
          VERSION=$(cat .version | tr -d '[:space:]')
          echo "Tagging images with version '$VERSION'..."
          docker tag website docker.pkg.github.com/$GITHUB_REPOSITORY/website:$VERSION
          docker tag website docker.pkg.github.com/$GITHUB_REPOSITORY/website:latest
          docker tag website appifyhub/website:$VERSION
          docker tag website appifyhub/website:latest

      - name: Publish Docker images to GitHub
        run: |
          VERSION=$(cat .version | tr -d '[:space:]')
          echo "Publishing images with version '$VERSION'..."
          docker push docker.pkg.github.com/$GITHUB_REPOSITORY/website:$VERSION
          docker push docker.pkg.github.com/$GITHUB_REPOSITORY/website:latest

      - name: Publish Docker images to DockerHub
        id: docker_publish
        env:
          USER: ${{ secrets.DOCKER_HUB_USER }}
          TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        run: |
          VERSION=$(cat .version | tr -d '[:space:]')
          docker login docker.io -u $USER -p $TOKEN
          echo "Publishing images with version '$VERSION'..."
          docker push appifyhub/website:$VERSION
          docker push appifyhub/website:latest
          echo ::set-output name=website_version::"$VERSION"

      - name: Publish to GitHub Releases
        env:
          ARTIFACT: "website"
          BUILD_QUALITY: "GA"
          VERSION: ${{ steps.docker_publish.outputs.website_version }}
          GITHUB_SHA: ${{ env.GITHUB_SHA }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ env.GITHUB_REPOSITORY }}
        run: |
          pip install -r .github/scripts/requirements.txt
          python .github/scripts/github_release.py

      - name: Deploy to production
        env:
          DEPLOY_API: ${{ secrets.DEPLOY_API }}
          DEPLOY_APP: ${{ secrets.DEPLOY_APP }}
          DEPLOY_ARGS: ${{ secrets.DEPLOY_ARGS }}
          DEPLOY_SPACE_PROD: ${{ secrets.DEPLOY_SPACE_PROD }}
          DEPLOY_AUTH_PROD: ${{ secrets.DEPLOY_AUTH_PROD }}
          DEPLOY_MODE: ${{ secrets.DEPLOY_MODE }}
          DEPLOY_SPEC: ${{ secrets.DEPLOY_SPEC }}
          DEPLOY_TAGS: ${{ secrets.DEPLOY_TAGS }}
        run: |
          CMD="${DEPLOY_SPEC}$(date +'%s')${DEPLOY_TAGS}"
          URL_PROD="${DEPLOY_API}/${DEPLOY_SPACE_PROD}/deployments/${DEPLOY_APP}?${DEPLOY_ARGS}"
          curl -s --location --request PATCH "${URL_PROD}" --insecure \
          --header "${DEPLOY_MODE}" \
          --header "${DEPLOY_AUTH_PROD}" \
          --data-raw "${CMD}" \
          > /dev/null
